[user]
        name = {{ .git.author }}
        email = {{ .git.email }}
        signingKey =
[init]
        dafaultBranch = main
[alias]
        st = status
        ci = commit
        br = branch
        co = checkout
        di = diff --ws-error-highlight=new,old
        lg = log --graph --date=relative --all --topo-order --pretty=format:'%C(cyan)[%an]%Creset %C(green bold)%d%Creset %C(yellow)%h%Creset : %s %C(cyan)[%ad]%Creset'
        lgh = log --graph --date=relative --all --topo-order --pretty=format:'%C(cyan)[%an]%Creset %C(green bold)%d%Creset %C(yellow)%H%Creset : %s %C(cyan)[%ad]%Creset'
        who = shortlog -s --
        ff = merge --ff-only @{u}
        fa = fetch --all --prune
        mu = merge @{u}
        pr = remote prune origin   # removes 'remote' refs in local repo that do not exist at origin
        rom = rebase origin/master # update local branch if master went ahead ...
        cl = clean -d -x
        clp = clean -d -x -e "**/*.iml" -e ".idea" # cleanup command that keeps intellij IDEA files around
        po = push origin # a short form to push a single ref to origin (usually for specific tags)
        fp = push --force-with-lease
        local-branches = "!git branch --format '%(refname:short) %(upstream:short)' | awk '{if (!$2) print $1;}'"
{{ if eq .chezmoi.hostname "orchid" -}}
[core]
        ignorecase = false
        excludesfile = ~/.gitignore
        editor = emacs
        pager = delta
#       sshCommand = ssh -i ~/.ssh/github_id_rsa -i ~/.ssh/gitlab_id
[interactive]
        diffFilter = delta --color-only
[delta]
        whitespace-error-style = 22 reverse
        syntax-theme = Dracula
[diff]
        tool = meld
[difftool]
        prompt = false
[difftool "meld"]
        cmd = meld "$LOCAL" "$REMOTE"
[merge]
        tool = meld
[mergetool "meld"]
        # Choose one of these 2 lines (not both!) explained below. The second is for three way merge inlcuding common ancestor.
        cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
#       cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"
[remote "origin"]
        prune = true
[checkout]
        defaultRemote = origin
[gpg]
        program = gpg
        format =
[commit]
        gpgSign = false
[tag]
        forceSignAnnotated = false
[gpg "ssh"]
        program =
        allowedSignersFile =
[filter "lfs"]
        clean = git-lfs clean -- %f
        smudge = git-lfs smudge -- %f
        process = git-lfs filter-process
        required = true
{{ end -}}
